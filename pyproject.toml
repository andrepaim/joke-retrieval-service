[tool.poetry]
name = "joke-retrieval-service"
version = "0.1.0"
description = "A Python gRPC service for retrieving jokes based on vector similarity search"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.10"
grpcio = "^1.53.0"
grpcio-tools = "^1.53.0"
protobuf = "^4.22.3"
pydantic = "^2.7.2"
typer = "^0.15.2"
sqlalchemy = "^2.0.9"
psycopg2-binary = "^2.9.6"
pgvector = "^0.4.0"
sentence-transformers = "^2.2.2"
numpy = "^1.24.3"
python-dotenv = "^1.0.0"
fastmcp = "^2.2.0"
pydantic-settings = "^2.8.1"
uvicorn = "^0.34.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
pytest-asyncio = "^0.21.0"
black = "^23.3.0"
isort = "^5.12.0"
mypy = "^1.2.0"
flake8 = "^6.0.0"
pytest-cov = "^6.1.1"

[tool.poetry.scripts]
joke-service = "app.main:app"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.mypy]
python_version = "3.10"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unused_configs = true

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3